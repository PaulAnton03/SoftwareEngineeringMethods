openapi: 3.0.3
info:
  title: Delivery Specification
  description: Title
  version: 1.0.0
servers:
  - url: 'https'
tags:
  - name: Order
  - name: Status
  - name: Admin
paths:
  /order:
    get:
      summary: Retrieve a list of all orders
      tags:
        - Order
      description: return a list of order objects
      responses:
        '200':
          description: Successful response, orders received
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Unsuccessful, orders cannot be retrieved because of bad request
        '404':
          description: Unsuccessful, no orders were found
  /order/{id}:
    get:
      summary: Retrieve an order given the order id
      tags:
        - Order
      description: return the order corresponding to the id
      parameters:
        - name: id
          in: path
          description: id of the order to retrieve
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: Successful response, order received
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Unsuccessful, order cannot be retrieved because of bad request
        '404':
          description: Unsuccessful, no order was found
    put:
      summary: Update an order given the order id
      tags:
        - Order
      description: update the order corresponding to the id
      parameters:
        - name: id
          in: path
          description: id of the order to update
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: Successful response, order updated
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Unsuccessful, order cannot be updated because of bad request
        '404':
          description: Unsuccessful, no order was found
  /order/{id}/current:
    get:
      summary: Retrieve the current location of the courier with this order
      tags:
        - Order
      description: return the location of the courier who has the order corresponding to the id
      parameters:
        - name: id
          in: path
          description: id of the order with the location to retrieve
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: Successful response, location received
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Location'
        '400':
          description: Unsuccessful, location cannot be retrieved because of bad request
        '404':
          description: Unsuccessful, no location was found
    put:
      summary: Update the current location of the courier with this order
      tags:
        - Order
      description: update the location of the courier who has the order corresponding to the id
      parameters:
        - name: id
          in: path
          description: id of the order with the location to update
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: Successful response, location updated
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Location'
        '400':
          description: Unsuccessful, location cannot be updated because of bad request
        '404':
          description: Unsuccessful, no location was found
  /order/{vendorId}:
    get:
      summary: Retrieve a list of all orders that belong to a given vendor
      tags:
        - Order
      description: return a list of order objects that are assigned to specific vendor
      parameters:
        - name: vendorId
          in: path
          description: id of the vendor to retrieve the orders from
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: Successful response, orders received
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Unsuccessful, orders cannot be retrieved because of bad request
        '404':
          description: Unsuccessful, no orders were found
    put:
      summary: Update a list of all orders that belong to a given vendor
      tags:
        - Order
      description: update a list of order objects that are assigned to specific vendor
      parameters:
        - name: vendorId
          in: path
          description: id of the vendor to update the orders for
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: Successful response, orders updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Unsuccessful, orders cannot be updated because of bad request
        '404':
          description: Unsuccessful, no orders were found

components:
  schemas:
    Order:
      type: object
      properties:
        status:
          type: string
          enum:
            - pending
            - accepted
            - rejected
            - preparing
            - given to courier
            - om-transit
            - delivered
        id:
          type: number
          format: int64
        deliveryDestination:
          $ref: '#/components/schemas/Location'
        customerId:
          type: number
          format: int64
          example: 66
        vendorId:
          type: number
          format: int64
          example: 77
        courierId:
          type: number
          format: int64
          example: 88
        ratingNumber:
          type: integer
          example: 5
        ratingComment:
          type: string
        orderTime:
          type: string
          format: date-time
          example: 2023-11-28T15:30:00Z
          description: the time the order was made
        prepTime:
          type: string
          format: time
          description: the time it takes to prepare the order in format "HH:MM:SS"
          example: '01:30:00'
        expectedDeliveryTime:
          type: string
          format: date-time
          description: the time the order will be planned to be delivered
        ActualDeliveryTime:
          type: string
          format: date-time
          description: the time the order actually is delivered


    Location:
      type: object
      properties:
        latitude:
          type: number
          format: float
          example: 23.92488
        longitude:
          type: number
          format: float
          example: 74.7099









  
